/**
 * Copyright 2012-2019 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */


zorka.defCfg("traps", "yes");

zorka.defCfg("traps.slow", "no");
zorka.defCfg("traps.error", "no");

zorka.defCfg("traps.slow.time", "5000");

zorka.defCfg("traps.file", "yes");
zorka.defCfg("traps.file.max", "8M");
zorka.defCfg("traps.file.num", "8");

zorka.defCfg("traps.zabbix", "no");
zorka.defCfg("traps.zabbix.addr", zorka.stringCfg("zabbix.server.addr"));
zorka.defCfg("traps.zabbix.port", zorka.stringCfg("zabbix.server.port"));
zorka.defCfg("traps.zabbix.host", zorka.getHostname());

zorka.defCfg("traps.syslog", "no");
zorka.defCfg("traps.syslog.addr", zorka.stringCfg("syslog.server.addr"));
zorka.defCfg("traps.syslog.host", zorka.getHostname());
zorka.defCfg("traps.syslog.facility", syslog.F_AUDIT);


__traps() {

  subchain(l, t) {
    lt = l + "." + t;

    if (zorka.boolCfg(lt)) {
      _file_trapper = zorka.boolCfg("traps.file") ? spy.trapperCollector(
        zorka.rollingFileTrapper(lt, "INFO",
          zorka.stringCfg(lt+".file.path", util.path("${zorka.log.dir}", l+"-"+t+".log")),
          zorka.intCfg(lt+".file.num"), zorka.kiloCfg(lt+".file.max"), false),
        zorka.INFO, lt, zorka.stringCfg(lt+".format")
      ) : null;

      _zabbix_trapper = zorka.boolCfg("traps.zabbix") ? spy.trapperCollector(
        zabbix.trapper(lt+".zabbix",
        "${traps.zabbix.addr}:${traps.zabbix.port}",
        "${traps.zabbix.host}", lt),
          zorka.INFO, lt, zorka.stringCfg(lt+".format")
        ) : null;

      _syslog_trapper = zorka.boolCfg("traps.syslog") ? spy.trapperCollector(
        syslog.trapper(lt+".syslog", "${traps.syslog.addr}", "${traps.syslog.host}", zorka.intCfg("traps.syslog.facility")),
        zorka.INFO, lt, zorka.stringCfg(lt+".format")
      ) : null;

      _chain = spy.subchain(
        "slow".equals(t) ? spy.longerThan(zorka.longCfg(lt+".time")) : null,
        _file_trapper, _syslog_trapper, _zabbix_trapper);

      return _chain;
    }

    return null;
  }

  return this;
}

traps = __traps();
