/**
 * Copyright 2012-2019 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

zorka.require(
  "tracer.bsh"
);

__casclient() {

  zorka.defCfg("cas.audit.secure", "no");

  zorka.defCfg("cas.stats", "yes");
  zorka.defCfg("cas.stats.mbean", "zorka:name=Cas,type=ZorkaStats");

  zorka.defCfg("cas.trace", zorka.boolCfg("tracer"));
  zorka.defCfg("cas.trace.time", zorka.longCfg("tracer.min.trace.time"));

  _secure = zorka.boolCfg("cas.audit.secure");

  _stats = zorka.boolCfg("cas.stats");
  _mbean = zorka.stringCfg("cas.stats.mbean");

  _trace = zorka.boolCfg("cas.trace");
  _trace_time = zorka.longCfg("cas.trace.time");

  spy.add(spy.instrument("CASCLI_VALIDATE")
    .onEnter(spy.fetchArg("THIS", 0), spy.fetchArg("TICKET", 1), spy.fetchArg("SERVICE", 2),
      _secure ? spy.crc32sum("TICKET", "TICKET") : null,
      spy.format("CAS_URI", "${THIS.casServerUrlPrefix}"),
      _trace ? spy.subchain(
        tracer.begin("CAS_CLI", _trace_time),
        tracer.attr("CAS_URI", "CAS_URI"),
        tracer.attr("TICKET", "TICKET"),
        tracer.attr("SERVICE", "SERVICE")
      ) : null)
    .onReturn(spy.fetchRetVal("RET"),
      _trace ? spy.subchain(
        spy.format("USERNAME", "${RET.principal.name}"),
        spy.format("ATTRS", "${RET.principal.attributes}"),
        tracer.attr("USERNAME", "USERNAME"), tracer.attr("ATTRS", "ATTRS")
      ): null)
    .onError(spy.fetchError("ERR"),
      _trace ? spy.subchain(
         spy.format("ERROR", "${ERR.message}"), tracer.attr("ERROR", "ERROR")
      ) : null)
    .onSubmit(_stats ? spy.zorkaStats("java", _mbean, "stats", "CLI_VALIDATE") : null)
    .include(spy.byMethod("org.jasig.cas.client.validation.AbstractUrlBasedTicketValidator", "validate")));

  if (zorka.boolCfg("zabbix.active")) {
    zorka.require("zabbix.bsh");
    zabbix.tagMetadata("JASIG_CAS:CLIENT");
  }

  return this;
}

casclient = __casclient();
