/**
 * Copyright 2012-2019 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

zorka.require("traps.bsh");

__audit() {

    zorka.defCfg("audit", "no");
    zorka.defCfg("audit.secure", "no");

    zorka.defCfg("audit.log.logins", zorka.boolCfg("audit"));
    zorka.defCfg("audit.log.authorizations", zorka.boolCfg("audit"));
    zorka.defCfg("audit.log.other", zorka.boolCfg("audit"));

    zorka.defCfg("audit.stats", zorka.boolCfg("audit"));
    zorka.defCfg("audit.stats.mbean", "zorka:name=Audit,type=ZorkaStats");

    zorka.defCfg("audit.file.path", util.path("${zorka.log.dir}", "audit.log"));

    zorka.defCfg("audit.syslog.facility", syslog.F_AUDIT);

    _stats = zorka.boolCfg("audit.stats");
    _mbean = zorka.stringCfg("audit.stats.mbean");

    _audit = zorka.boolCfg("audit");


    if (_audit && zorka.boolCfg("traps.file")) {
        filePath = zorka.stringCfg("audit.file.path");
        zorka.logInfo("Audit logs will be logged to local file: " + filePath);
        fileTrapper = zorka.dailyFileTrapper("audit", zorka.INFO, filePath, false);
    }


    if (_audit && zorka.boolCfg("traps.syslog")) {
        syslogAddr = zorka.stringCfg("traps.syslog.addr");
        syslogTrapper = syslog.trapper("audit", syslogAddr, zorka.getHostname(), syslog.F_AUDIT);
        zorka.logInfo("Audit logs will be sent to remote syslog server: " + syslogAddr);
    }


    if (_audit && zorka.boolCfg("traps.zabbix")) {
        zabbixTrapper = zabbix.trapper("audit", "${traps.zabbix.addr}", "${traps.zabbix.host}", "zorka.audit");
        zorka.logInfo("Audit logs will be sent to zabbix server.");
    }


    audit(sdef, action, expr) {

        sdef = sdef.onSubmit(spy.strTime("TIME"));

        if (_audit && zorka.boolCfg("traps.file")) {
            sdef = sdef.onSubmit(spy.trapperCollector(fileTrapper, zorka.INFO, "zorka.audit", expr));
        }

        if (_audit && zorka.boolCfg("traps.syslog")) {
            sdef = sdef.onSubmit(spy.trapperCollector(syslogTrapper, zorka.INFO, "zorka.audit", expr));
        }

        if (_audit && zorka.boolCfg("traps.zabbix")) {
            sdef = sdef.onSubmit(spy.trapperCollector(zabbixTrapper, zorka.INFO, "zorka.audit", expr));
        }

        if(_stats) {
            sdef = sdef.onSubmit(spy.zorkaStats("java", _mbean, "stats", action));
        }

        spy.add(sdef);
    }

    return this;
}

audit = __audit();
