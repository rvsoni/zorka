/*
 * Copyright 2012-2019 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 * <p/>
 * This is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * <p/>
 * This software is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU General Public License
 * along with this software. If not, see <http://www.gnu.org/licenses/>.
 */
package com.jitlogic.zorka.common.tracedata;


import java.io.IOException;

/**
 * Represents all kinds of data generated by tracer that contain
 * tracer-specific metadata, mainly symbols.
 */
public interface SymbolicRecord {

    /**
     * Traverses through all structures of data and calls checker
     * methods when symbols or other metadata occur.
     *
     * @param checker metadata checker object
     * @throws IOException TODO get rid of IOException here
     */
    void traverse(MetadataChecker checker) throws IOException;
}
